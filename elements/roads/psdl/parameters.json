{
	"parameters": [
		{
			"name": "isDouble",
			"label": "RD_DOUBLE",
			"type": "bool"
		},
		{
			"name": "echo",
			"label": "RD_ECHO",
			"tooltip": "RD_ECHO_TOOLTIP",
			"type": "bool"
		},
		{
			"name": "warp",
			"label": "RD_WARP",
			"tooltip": "RD_WARP_TOOLTIP",
			"type": "bool"
		},
		{
			"name": "flatSidewalk",
			"label": "RD_SW_SHOULDERS",
			"type": "bool"
		},
		{
			"name": "applyHeightAnyway",
			"label": "RD_LOWER_WO_SW",
			"tooltip": "RD_LOWER_WO_SW_TOOLTIP",
			"type": "bool"
		},
		{
			"name": "hasSidewalks",
			"label": "RD_SW",
			"type": "bool"
		},
		{
			"name": "totalWidth",
			"label": "RD_TOTAL_WIDTH",
			"placeholder": "WIDTH_PH",
			"type": "float"
		},
		{
			"name": "roadWidth",
			"label": "RD_RD_WIDTH",
			"placeholder": "WIDTH_PH",
			"type": "float"
		},
		{
			"name": "texture0",
			"label": "SW_TEX",
			"placeholder": "TEXTURE_PH",
			"type": "texture"
		},
		{
			"name": "texture1",
			"label": "ROAD_TEX",
			"placeholder": "TEXTURE_PH",
			"type": "texture"
		},
		{
			"name": "textureLOD",
			"label": "RD_LOW_LOD_TEX",
			"placeholder": "TEXTURE_PH",
			"type": "texture"
		},
		{
			"name": "exportToPKG",
			"label": "EXPORT_TO_PKG",
			"type": "bool",
			"instanceSpecific": true
		},
		{
			"name": "textureCW0",
			"label": "RD_CW_TEX_0",
			"placeholder": "TEXTURE_PH",
			"type": "texture"
		},
		{
			"name": "textureCW1",
			"label": "RD_CW_TEX_1",
			"placeholder": "TEXTURE_PH",
			"type": "texture"
		},
		{
			"name": "forwardLanes",
			"label": "RD_FW_LANES",
			"placeholder": "LANES_PH",
			"type": "int"
		},
		{
			"name": "backwardLanes",
			"label": "RD_BW_LANES",
			"placeholder": "LANES_PH",
			"type": "int"
		},
		{
			"name": "forwardLanesSpace",
			"label": "RD_FW_LANES_SZ",
			"placeholder": "SIZE_PH",
			"type": "float"
		},
		{
			"name": "backwardLanesSpace",
			"label": "RD_BW_LANES_SZ",
			"placeholder": "SIZE_PH",
			"type": "float"
		},
		{
			"name": "forwardPark",
			"label": "RD_FW_PK_LANE",
			"type": "bool"
		},
		{
			"name": "backwardPark",
			"label": "RD_BW_PK_LANE",
			"type": "bool"
		},
		{
			"name": "forwardParkWidth",
			"label": "RD_FW_PK_LANE_W",
			"placeholder": "WIDTH_PH",
			"type": "float"
		},
		{
			"name": "backwardParkWidth",
			"label": "RD_BW_PK_LANE_W",
			"placeholder": "WIDTH_PH",
			"type": "float"
		},
		{
			"name": "pedestrianStreet",
			"label": "RD_PEDESTRIAN",
			"type": "bool"
		},
		{
			"name": "disableTraffic",
			"label": "RD_NO_TRAFFIC",
			"type": "bool"
		},
		{
			"name": "disableRightPedestrians",
			"label": "RD_NO_RIGHT_PED",
			"type": "bool"
		},
		{
			"name": "disableLeftPedestrians",
			"label": "RD_NO_LEFT_PED",
			"type": "bool"
		},
		{
			"name": "start_rule",
			"label": "RD_START_RULE",
			"type": "enum",
			"enumLabels": [
				"RD_START_RULE_FIFO",
				"RD_START_RULE_LIGHTS",
				"RD_START_RULE_ALWAYS_STOP",
				"RD_START_RULE_NEVER_STOP"
			],
			"instanceSpecific": true
		},
		{
			"name": "end_rule",
			"label": "RD_END_RULE",
			"type": "enum",
			"enumLabels": [
				"RD_START_RULE_FIFO",
				"RD_START_RULE_LIGHTS",
				"RD_START_RULE_ALWAYS_STOP",
				"RD_START_RULE_NEVER_STOP"
			],
			"instanceSpecific": true
		},
		{
			"name": "forceStraightLeftEndSidewalk",
			"label": "RD_FRC_L_E_SW",
			"type": "bool",
			"instanceSpecific": true
		},
		{
			"name": "forceStraightRightEndSidewalk",
			"label": "RD_FRC_R_E_SW",
			"type": "bool",
			"instanceSpecific": true
		},
		{
			"name": "forceStraightLeftStartSidewalk",
			"label": "RD_FRC_L_S_SW",
			"type": "bool",
			"instanceSpecific": true
		},
		{
			"name": "forceStraightRightStartSidewalk",
			"label": "RD_FRC_R_S_SW",
			"type": "bool",
			"instanceSpecific": true
		},
		{
			"name": "divider",
			"label": "TYPE",
			"type": "enum",
			"enumLabels": [
				"RD_D_T_NONE",
				"RD_D_T_FLAT",
				"RD_D_T_ELEVATED",
				"RD_D_T_WEDGED"
			]
		},
		{
			"name": "dividerWidth",
			"label": "RD_DIV_W",
			"placeholder": "WIDTH_PH",
			"type": "float"
		},
		{
			"name": "dividerParam",
			"label": "RD_DIV_PARAM",
			"placeholder": "RD_DIV_PARAM_PH",
			"type": "float"
		},
		{
			"name": "texture2",
			"label": "RD_DIV_TEX_1",
			"placeholder": "TEXTURE_PH",
			"type": "texture"
		},
		{
			"name": "texture3",
			"label": "RD_DIV_TEX_2",
			"placeholder": "TEXTURE_PH",
			"type": "texture"
		},
		{
			"name": "texture4",
			"label": "RD_DIV_TEX_3",
			"placeholder": "TEXTURE_PH",
			"type": "texture"
		},
		{
			"name": "texture5",
			"label": "RD_DIV_TEX_4",
			"placeholder": "TEXTURE_PH",
			"type": "texture"
		},
		{
			"container": "rail",
			"name": "type",
			"label": "TYPE",
			"type": "enum",
			"enumLabels": [
				"RD_RL_T_NONE",
				"RD_RL_T_RAIL",
				"RD_RL_T_WALL",
				"RD_RL_T_FLAT_GALLERY",
				"RD_RL_T_CURVED_GALLERY"
			]
		},
		{
			"container": "rail",
			"name": "hasRight",
			"label": "RIGHT",
			"type": "bool"
		},
		{
			"container": "rail",
			"name": "hasLeft",
			"label": "LEFT",
			"type": "bool"
		},
		{
			"container": "rail",
			"name": "height",
			"label": "HEIGHT",
			"placeholder": "HEIGHT_PH",
			"type": "float"
		},
		{
			"container": "rail",
			"name": "texture0",
			"label": "RD_RL_R_WALL_TEX",
			"placeholder": "TEXTURE_PH",
			"type": "texture"
		},
		{
			"container": "rail",
			"name": "texture1",
			"label": "RD_RL_L_WALL_TEX",
			"placeholder": "TEXTURE_PH",
			"type": "texture"
		},
		{
			"container": "rail",
			"name": "texture2",
			"label": "RD_RL_CEIL_TEX",
			"placeholder": "TEXTURE_PH",
			"type": "texture"
		},
		{
			"container": "rail",
			"name": "texture3",
			"label": "RD_RL_R_OUT_TEX",
			"placeholder": "TEXTURE_PH",
			"type": "texture"
		},
		{
			"container": "rail",
			"name": "texture4",
			"label": "RD_RL_L_OUT_TEX",
			"placeholder": "TEXTURE_PH",
			"type": "texture"
		},
		{
			"container": "rail",
			"name": "texture5",
			"label": "RD_RL_GROUND_TEX",
			"placeholder": "TEXTURE_PH",
			"type": "texture"
		},
		{
			"container": "rail",
			"name": "offsetEndLeft",
			"label": "RD_RL_OFFSET_EL",
			"type": "bool"
		},
		{
			"container": "rail",
			"name": "offsetStartLeft",
			"label": "RD_RL_OFFSET_SL",
			"type": "bool"
		},
		{
			"container": "rail",
			"name": "offsetEndRight",
			"label": "RD_RL_OFFSET_ER",
			"type": "bool"
		},
		{
			"container": "rail",
			"name": "offsetStartRight",
			"label": "RD_RL_OFFSET_SR",
			"type": "bool"
		},
		{
			"container": "rail",
			"name": "continueRightOnStartIntersection",
			"label": "RD_RL_CONTINUE_R_S_IS",
			"type": "bool",
			"instanceSpecific": true
		},
		{
			"container": "rail",
			"name": "continueLeftOnStartIntersection",
			"label": "RD_RL_CONTINUE_L_S_IS",
			"type": "bool",
			"instanceSpecific": true
		},
		{
			"container": "rail",
			"name": "continueRightOnEndIntersection",
			"label": "RD_RL_CONTINUE_R_E_IS",
			"type": "bool",
			"instanceSpecific": true
		},
		{
			"container": "rail",
			"name": "continueLeftOnEndIntersection",
			"label": "RD_RL_CONTINUE_L_E_IS",
			"type": "bool",
			"instanceSpecific": true
		},
		{
			"name": "blockNumber",
			"label": "BLOCK_NUMBER",
			"placeholder": "VALUE_PH",
			"tooltip": "BLOCK_NUMBER_TOOLTIP",
			"type": "int",
			"instanceSpecific": true
		},
		{
			"name": "trafficLightsOnOppositeRoad",
			"label": "RD_TRAFFIC_LIGHTS_OPPOSITE_ROAD",
			"type": "bool"
		},
		{
			"name": "startTrafficLight",
			"label": "RD_START_TRAFFIC_LIGHT",
			"type": "objectInstance",
			"objectInstanceSettings": {
				"type": "trafficLight",
				"allowCustomModel": false,
				"defaultModel": {
					"dynamic": true,
					"options": [
						"_GLOBAL_trafficLight1",
						"_GLOBAL_trafficLight2"
					],
					"index": "startTrafficLight_meshIndex"
				},
				"intersection": 0,
				"condition": "startTrafficLightCondition",
				"basePosition": "startTrafficLightPosition",
				"basePositionRoadChoice": {
					"lateDefinitions": "startTrafficLight",
					"condition": "startTrafficLightPositionOnOtherRoad",
					"index": "startTrafficLightRoadIndex",
					"score": "startTrafficLightRoadScore",
					"inputData": [
						"startTrafficLightOppInv",
						"startTrafficLightInOffset",
						"projTrafficLightStart"
					]
				},
				"baseRotation": "startTrafficLightRotation",
				"allowPosition": [
					true,
					true,
					true
				],
				"allowRotation": [
					false,
					true,
					false
				],
				"allowScale": [
					false,
					false,
					false
				]
			}
		},
		{
			"name": "endTrafficLight",
			"label": "RD_END_TRAFFIC_LIGHT",
			"type": "objectInstance",
			"objectInstanceSettings": {
				"type": "trafficLight",
				"allowCustomModel": false,
				"defaultModel": {
					"dynamic": true,
					"options": [
						"_GLOBAL_trafficLight1",
						"_GLOBAL_trafficLight2"
					],
					"index": "endTrafficLight_meshIndex"
				},
				"intersection": 1,
				"condition": "endTrafficLightCondition",
				"basePosition": "endTrafficLightPosition",
				"basePositionRoadChoice": {
					"lateDefinitions": "endTrafficLight",
					"condition": "endTrafficLightPositionOnOtherRoad",
					"index": "endTrafficLightRoadIndex",
					"score": "endTrafficLightRoadScore",
					"inputData": [
						"endTrafficLightOppInv",
						"endTrafficLightInOffset",
						"projTrafficLightEnd"
					]
				},
				"baseRotation": "endTrafficLightRotation",
				"allowPosition": [
					true,
					true,
					true
				],
				"allowRotation": [
					false,
					true,
					false
				],
				"allowScale": [
					false,
					false,
					false
				]
			}
		},
		{
			"name": "trafficLightOnOppositeRoad",
			"label": "RD_TRAFFIC_LIGHT_OPPOSITE_ROAD",
			"tooltip": "RD_TRAFFIC_LIGHT_OPPOSITE_ROAD_TOOLTIP",
			"type": "bool"
		},
		{
			"name": "startTrafficLightRoadIdxAdj",
			"label": "RD_TRAFFIC_LIGHT_OPPOSITE_ROAD_ADJ_START",
			"tooltip": "RD_TRAFFIC_LIGHT_OPPOSITE_ROAD_ADJ_TOOLTIP",
			"type": "int",
			"instanceSpecific": true
		},
		{
			"name": "startTrafficLightOppInv",
			"label": "RD_TRAFFIC_LIGHT_OPPOSITE_ROAD_INV_START",
			"type": "bool",
			"instanceSpecific": true
		},
		{
			"name": "endTrafficLightOppInv",
			"label": "RD_TRAFFIC_LIGHT_OPPOSITE_ROAD_INV_END",
			"type": "bool",
			"instanceSpecific": true
		},
		{
			"name": "startTrafficLightInOffset",
			"label": "RD_TRAFFIC_LIGHT_OPPOSITE_ROAD_IN_OFFSET_START",
			"tooltip": "RD_TRAFFIC_LIGHT_OPPOSITE_ROAD_IN_OFFSET_TOOLTIP",
			"type": "float",
			"instanceSpecific": false
		},
		{
			"name": "endTrafficLightInOffset",
			"label": "RD_TRAFFIC_LIGHT_OPPOSITE_ROAD_IN_OFFSET_END",
			"tooltip": "RD_TRAFFIC_LIGHT_OPPOSITE_ROAD_IN_OFFSET_TOOLTIP",
			"type": "float",
			"instanceSpecific": false
		},
		{
			"name": "endTrafficLightRoadIdxAdj",
			"label": "RD_TRAFFIC_LIGHT_OPPOSITE_ROAD_ADJ_END",
			"tooltip": "RD_TRAFFIC_LIGHT_OPPOSITE_ROAD_ADJ_TOOLTIP",
			"type": "int",
			"instanceSpecific": true
		},
		{
			"name": "swapTrafficLights",
			"label": "RD_TRAFFIC_LIGHT_SWAP",
			"tooltip": "RD_TRAFFIC_LIGHT_SWAP_TOOLTIP",
			"type": "bool"
		}
	],
	"internalParametersSettings": [
		{
			"name": "makeCoplanar",
			"enabled": true
		}
	],
	"loopVariables": [
		"i"
	],
	"staticDefinitions": [
		{
			"name": "trueDivWidth",
			"type": "float",
			"value": "if(divider=0, 0, dividerWidth)"
		},
		{
			"name": "totalWidthI",
			"type": "float",
			"value": "if(throughIntersection, roadWidth, totalWidth)"
		},
		{
			"name": "applyHeightAnywayI",
			"type": "bool",
			"value": "(not throughIntersection and applyHeightAnyway) or (throughIntersection and (not flatSidewalk or applyHeightAnyway))"
		},
		{
			"name": "hasSidewalksI",
			"type": "bool",
			"value": "hasSidewalks and not throughIntersection"
		},
		{
			"name": "rail_typeI",
			"type": "int",
			"value": "if(throughIntersection, 0, rail_type)"
		},
		{
			"name": "hasSidewalksOrShoulders",
			"type": "bool",
			"value": "isDouble and hasSidewalksI"
		},
		{
			"name": "hasRealSidewalks",
			"type": "bool",
			"value": "hasSidewalksOrShoulders and not flatSidewalk"
		},
		{
			"name": "hasShoulders",
			"type": "bool",
			"value": "hasSidewalksOrShoulders and flatSidewalk"
		},
		{
			"name": "roadWidthT",
			"type": "float",
			"value": "if(hasSidewalksOrShoulders, roadWidth, totalWidthI)"
		},
		{
			"name": "hasElevatedTop",
			"type": "bool",
			"value": "hasRealSidewalks and not applyHeightAnywayI"
		},
		{
			"name": "hasRealDivider",
			"type": "bool",
			"value": "isDouble and divider > 0"
		},
		{
			"name": "hasRail",
			"type": "bool",
			"value": "rail_type > 0 and (rail_hasLeft or rail_hasRight)"
		},
		{
			"name": "canBeSimplified",
			"type": "bool",
			"value": "not hasRail or rail_type < 4"
		},
		{
			"name": "hasGallery",
			"type": "bool",
			"value": "(rail_hasLeft or rail_hasRight) and (rail_type = 3 or rail_type = 4)"
		},
		{
			"name": "realBwParkW",
			"type": "float",
			"value": "if(backwardPark, backwardParkWidth, 0)"
		},
		{
			"name": "realFwParkW",
			"type": "float",
			"value": "if(forwardPark, forwardParkWidth, 0)"
		},
		{
			"name": "singleSwWidth",
			"type": "float",
			"value": "if(hasSidewalksOrShoulders, (totalWidthI - roadWidth) * 0.5, 0)"
		},
		{
			"name": "texWidth",
			"type": "float",
			"value": "if(isDouble, if(hasSidewalksOrShoulders, roadWidth, totalWidthI) * 0.5, totalWidthI)"
		},
		{
			"name": "swAdjLen",
			"type": "float",
			"value": "2*max(1, round(totalLength/singleSwWidth))/totalLength"
		},
		{
			"name": "rdAdjLen",
			"type": "float",
			"value": "2*max(1, round(totalLength/texWidth))/totalLength"
		},
		{
			"name": "adjLen",
			"type": "float",
			"value": "max(1, round(totalLength))/totalLength"
		},
		{
			"name": "hVal",
			"type": "float",
			"value": "if(hasShoulders, applyHeightAnywayI * 0.15, max(hasSidewalksI, applyHeightAnywayI) * 0.15)"
		},
		{
			"name": "sidewalkHeight",
			"type": "vec3",
			"value": "-worldUp * if(not hasRealSidewalks, applyHeightAnywayI * 0.15, 0)"
		},
		{
			"name": "startTrafficLightCondition",
			"type": "bool",
			"value": "hasStartIntersection and backwardLanes > 0 and start_rule = 1"
		},
		{
			"name": "endTrafficLightCondition",
			"type": "bool",
			"value": "hasEndIntersection and forwardLanes > 0 and end_rule = 1"
		},
		{
			"name": "startTrafficLightPositionOnOtherRoad",
			"type": "bool",
			"value": "trafficLightOnOppositeRoad or startTrafficLightRoadIdxAdj != 0"
		},
		{
			"name": "endTrafficLightPositionOnOtherRoad",
			"type": "bool",
			"value": "trafficLightOnOppositeRoad or endTrafficLightRoadIdxAdj != 0"
		},
		{
			"name": "endTrafficLightOppInv_input",
			"type": "bool",
			"value": "false"
		},
		{
			"name": "startTrafficLightOppInv_input",
			"type": "bool",
			"value": "false"
		},
		{
			"name": "startTrafficLightInOffset_input",
			"type": "float",
			"value": "1"
		},
		{
			"name": "endTrafficLightInOffset_input",
			"type": "float",
			"value": "1"
		},
		{
			"name": "projTrafficLightStart_input",
			"type": "vec3",
			"value": "vec3(0, 0, 0)"
		},
		{
			"name": "projTrafficLightEnd_input",
			"type": "vec3",
			"value": "vec3(0, 0, 0)"
		},
		{
			"name": "startTrafficLight_meshIndex",
			"type": "int",
			"value": "if(backwardLanes <= 1, 0, 1)"
		},
		{
			"name": "endTrafficLight_meshIndex",
			"type": "int",
			"value": "if(forwardLanes <= 1, 0, 1)"
		}
	],
	"dynamicDefinitions": [
		{
			"name": "h",
			"type": "vec3",
			"value": "localUp * hVal"
		},
		{
			"name": "zRd",
			"type": "float",
			"value": "z*rdAdjLen"
		},
		{
			"name": "zSw",
			"type": "float",
			"value": "z*swAdjLen"
		},
		{
			"name": "zDiv",
			"type": "float",
			"value": "z*adjLen"
		},
		{
			"name": "rlPos",
			"type": "float",
			"value": "if(rail_height>0, z / rail_height, 0)"
		},
		{
			"name": "anchorH",
			"type": "vec3",
			"value": "h * if(not hasRealSidewalks, applyHeightAnywayI, 0)"
		}
	],
	"lateDefinitions": [
		{
			"category": "common",
			"definitions": [
				{
					"name": "startTrafficLightPosition",
					"type": "vec3",
					"value": "if(swapTrafficLights, v0_0, v6_0)"
				},
				{
					"name": "endTrafficLightPosition",
					"type": "vec3",
					"value": "if(swapTrafficLights, v6_1, v0_1)"
				},
				{
					"name": "invertedStartTrafficLightPosition",
					"type": "vec3",
					"value": "if(swapTrafficLights, v6_0, v0_0)"
				},
				{
					"name": "invertedEndTrafficLightPosition",
					"type": "vec3",
					"value": "if(swapTrafficLights, v0_1, v6_1)"
				},
				{
					"name": "startTrafficLightRotation",
					"type": "vec3",
					"value": "vec3(0, signedAngle(startDir, worldForward, -worldUp), 0)"
				},
				{
					"name": "endTrafficLightRotation",
					"type": "vec3",
					"value": "vec3(0, signedAngle(endDir, -worldForward, -worldUp), 0)"
				}
			]
		},
		{
			"category": "startTrafficLight",
			"definitions": [
				{
					"name": "projTrafficLightStart",
					"type": "vec3",
					"value": "startTrafficLightPosition - startDir * distance(startTrafficLightPosition, startIntersectionPosition) * 2"
				},
				{
					"name": "startTrafficLightRoadIndex",
					"type": "int",
					"value": "if(trafficLightOnOppositeRoad, maxScoreRoadIndex, 0) + startTrafficLightRoadIdxAdj"
				},
				{
					"name": "tl00Ad",
					"type": "float",
					"value": "distance(projTrafficLightStart_input, startTrafficLightPosition)"
				},
				{
					"name": "tl00Bd",
					"type": "float",
					"value": "distance(projTrafficLightStart_input, invertedStartTrafficLightPosition)"
				},
				{
					"name": "tl01Ad",
					"type": "float",
					"value": "distance(projTrafficLightStart_input, endTrafficLightPosition)"
				},
				{
					"name": "tl01Bd",
					"type": "float",
					"value": "distance(projTrafficLightStart_input, invertedEndTrafficLightPosition)"
				},
				{
					"name": "stloi_i",
					"type": "bool",
					"value": "startTrafficLightOppInv_input"
				},
				{
					"name": "tl00c",
					"type": "bool",
					"value": "(stloi_i and tl00Ad>tl00Bd) or ((not stloi_i) and tl00Ad<tl00Bd)"
				},
				{
					"name": "tl01c",
					"type": "bool",
					"value": "(stloi_i and tl01Ad>tl01Bd) or ((not stloi_i) and tl01Ad<tl01Bd)"
				},
				{
					"name": "stlp_s",
					"type": "vec3",
					"value": "if(tl00c, startTrafficLightPosition, invertedStartTrafficLightPosition)"
				},
				{
					"name": "stlp_e",
					"type": "vec3",
					"value": "if(tl01c, endTrafficLightPosition invertedEndTrafficLightPosition"
				},
				{
					"name": "startTrafficLightPosition_start",
					"type": "vec3",
					"value": "stlp_s + normalize(startIntersectionPosition - stlp_s) * startTrafficLightInOffset_input"
				},
				{
					"name": "startTrafficLightPosition_end",
					"type": "vec3",
					"value": "stlp_e + normalize(endIntersectionPosition - stlp_e)* startTrafficLightInOffset_input"
				},
				{
					"name": "startTrafficLightRoadScore_start",
					"type": "float",
					"value": "if(tl00Ad<tl00Bd, 1/tl00Ad, 1/tl00Bd)"
				},
				{
					"name": "startTrafficLightRoadScore_end",
					"type": "float",
					"value": "if(tl01Ad<tl01Bd, 1/tl01Ad 1/tl01Bd)"
				}
			]
		},
		{
			"category": "endTrafficLight",
			"definitions": [
				{
					"name": "projTrafficLightEnd",
					"type": "vec3",
					"value": "endTrafficLightPosition + endDir * distance(endTrafficLightPosition, endIntersectionPosition) * 2"
				},
				{
					"name": "endTrafficLightRoadIndex",
					"type": "int",
					"value": "if(trafficLightOnOppositeRoad, maxScoreRoadIndex, 0) + endTrafficLightRoadIdxAdj"
				},
				{
					"name": "tl10Ad",
					"type": "float",
					"value": "distance(projTrafficLightEnd_input, startTrafficLightPosition)"
				},
				{
					"name": "tl10Bd",
					"type": "float",
					"value": "distance(projTrafficLightEnd_input, invertedStartTrafficLightPosition)"
				},
				{
					"name": "tl11Ad",
					"type": "float",
					"value": "distance(projTrafficLightEnd_input, endTrafficLightPosition)"
				},
				{
					"name": "tl11Bd",
					"type": "float",
					"value": "distance(projTrafficLightEnd_input, invertedEndTrafficLightPosition)"
				},
				{
					"name": "etloi_i",
					"type": "bool",
					"value": "endTrafficLightOppInv_input"
				},
				{
					"name": "tl10c",
					"type": "bool",
					"value": "(etloi_i and tl10Ad>tl10Bd) or ((not etloi_i) and tl10Ad<tl10Bd))"
				},
				{
					"name": "tl11c",
					"type": "bool",
					"value": "(etloi_i and tl11Ad>tl11Bd) or ((not etloi_i) and tl11Ad<tl11Bd)"
				},
				{
					"name": "etlp_s",
					"type": "vec3",
					"value": "if(tl10c, startTrafficLightPosition, invertedStartTrafficLightPosition)"
				},
				{
					"name": "etlp_e",
					"type": "vec3",
					"value": "if(tl11c, endTrafficLightPosition invertedEndTrafficLightPosition"
				},
				{
					"name": "endTrafficLightPosition_start",
					"type": "vec3",
					"value": "etlp_s + normalize(startIntersectionPosition - etlp_s)* endTrafficLightInOffset_input"
				},
				{
					"name": "endTrafficLightPosition_end",
					"type": "vec3",
					"value": "etlp_e + normalize(endIntersectionPosition - etlp_e)* endTrafficLightInOffset_input"
				},
				{
					"name": "endTrafficLightRoadScore_start",
					"type": "float",
					"value": "if(tl10Ad<tl10Bd, 1/tl10Ad, 1/tl10Bd)"
				},
				{
					"name": "endTrafficLightRoadScore_end",
					"type": "float",
					"value": "if(tl11Ad<tl11Bd, 1/tl11Ad 1/tl11Bd)"
				}
			]
		}
	]
}
